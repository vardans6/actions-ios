name: Release pipeline

on:
  push:
    branches:
      - master

env:
  AC_ISSUER: "093b7a6a-8833-4791-82d5-3f4ac31c6444"
  AC_PRIVATE_KEY_ID: "965RP3TSVC"
  APP_BUNDLE_NAME: "App"
  APP_BUNDLE_PATH: "./build"
  ARCHIVE_NAME: "Archive"
  ARCHIVE_PATH: "./Archive.xcarchive"
  BUNDLE_ID: "com.gergelynemeth.Actions"
  CONFIGURATION: "Release"
  SCHEME: "Actions"
  SIGNING_TYPE: "IOS_APP_STORE"
  TARGET:  "Actions"

jobs:
  archive:
    name: Archive
    runs-on: macOS-latest
    steps:
    - name: Checkout project
      uses: actions/checkout@v1
    - name: Prepare signing
      uses: ngeri/prepare-signing@v1.0.2
      with:
        appStoreConnectPrivateKey: ${{ secrets.AC_PRIVATE_KEY }}
        keyID: ${{ env.AC_PRIVATE_KEY_ID }}
        issuerID: ${{ env.AC_ISSUER }}
        keychainName: ${{ secrets.KCID }}
        keychainPassword: ${{ secrets.KCPW }}
        base64P12File: ${{ secrets.B64_CERT_DIST }}
        p12Password: ${{ secrets.P12PW_DIST }}
        bundleIdentifier: ${{ env.BUNDLE_ID }}
        signType: ${{ env.SIGNING_TYPE }}
    - name: Build number bump
      uses: ngeri/version-bump@v1.0.1
      with:
        appStoreConnectPrivateKey: ${{ secrets.AC_PRIVATE_KEY }}
        keyID: ${{ env.AC_PRIVATE_KEY_ID }}
        issuerID: ${{ env.AC_ISSUER }}
        targetName: ${{ env.TARGET }}
    - name: Build archive
      run: |
        set -o pipefail && xcodebuild -scheme $SCHEME -sdk iphoneos -configuration $CONFIGURATION archive -archivePath $ARCHIVE_PATH
    - name: Upload archive
      uses: actions/upload-artifact@v1
      with:
        name: ${{ env.ARCHIVE_NAME }}
        path: ${{ env.ARCHIVE_PATH }}

  export:
    name: Export ipa
    runs-on: macOS-latest
    needs: archive
    steps:
    - name: Checkout project
      uses: actions/checkout@v1
    - name: Download archive
      uses: actions/download-artifact@v1
      with:
        name: ${{ env.ARCHIVE_NAME }}
    - name: Prepare signing
      uses: ngeri/prepare-signing@v1.0.2
      with:
        appStoreConnectPrivateKey: ${{ secrets.AC_PRIVATE_KEY }}
        keyID: ${{ env.AC_PRIVATE_KEY_ID }}
        issuerID: ${{ env.AC_ISSUER }}
        keychainName: ${{ secrets.KCID }}
        keychainPassword: ${{ secrets.KCPW }}
        base64P12File: ${{ secrets.B64_CERT_DIST }}
        p12Password: ${{ secrets.P12PW_DIST }}
        bundleIdentifier: ${{ env.BUNDLE_ID }}
        signType: ${{ env.SIGNING_TYPE }}
    - name: Export ipa
      run: |
        set -o pipefail && xcodebuild -exportArchive -archivePath $ARCHIVE_NAME -exportOptionsPlist ./devops/exportOptions.plist -exportPath $APP_BUNDLE_PATH
    - name: Upload ipa
      uses: actions/upload-artifact@v1
      with:
        name: ${{ env.APP_BUNDLE_NAME }}
        path: ${{ env.APP_BUNDLE_PATH }}

  upload:
    name: Upload ipa
    runs-on: macOS-latest
    needs: export
    steps:
    - name: Checkout project
      uses: actions/checkout@v1
    - name: Download ipa
      uses: actions/download-artifact@v1
      with:
        name: ${{ env.APP_BUNDLE_NAME }}
    - name: Setup App Store Connect authentication
      env:
        AC_PRIVATE_KEY: ${{ secrets.AC_PRIVATE_KEY }}
      run: |
        mkdir -p ~/.appstoreconnect/private_keys
        echo "$AC_PRIVATE_KEY" > ~/.appstoreconnect/private_keys/AuthKey_$AC_PRIVATE_KEY_ID.p8
    - name: Validate ipa
      run: |
        set -o pipefail && xcrun altool --validate-app --file $(find . -type f -name "*.ipa") --apiKey $AC_PRIVATE_KEY_ID --apiIssuer $AC_ISSUER | xcpretty --color --simple
    - name: Upload ipa
      run: |
        set -o pipefail && xcrun altool --upload-app --file $(find . -type f -name "*.ipa") --apiKey $AC_PRIVATE_KEY_ID --apiIssuer $AC_ISSUER | xcpretty --color --simple
